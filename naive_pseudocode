NAIVE_JACCARD_SIMILARITY(text1, text2) // Has time complexity of O(n+m)
    words1 ← SPLIT(LOWERCASE(text1))
    words2 ← SPLIT(LOWERCASE(text2))

    set1 ← SET(words1) 
    set2 ← SET(words2)

    intersection_count ← 0

    FOR word IN set1 DO    
        FOR compare_word IN set2 DO
            IF word = compare_word THEN
                intersection_count ← intersection_count + 1
            END IF
        END FOR
    END FOR

    union_count ← SIZE(set1) + SIZE(set2)

    FOR word IN set1 DO
        IF word ∈ set2 THEN
            union_count ← union_count - 1
        END IF
    END FOR

    IF union_count = 0 THEN    //To avoid dividing by zero
        RETURN 0.0
    END IF

    RETURN intersection_count / union_count